var N=null,E="",T="t",U="u",searchIndex={};
var R=["payload","option","usize","get_position","position","carrier","result","to_owned","clone_into","try_from","try_into","borrow_mut","type_id","borrow","typeid","slotkind","formatter","SlotKind"];
searchIndex["swarm_it"]={"doc":E,"i":[[3,"Carrier","swarm_it","Represnets the `Carrier` object. Carrier is an entity that…",N,N],[3,"Payload",E,"Represnets the `Payload` object. Payload is transferred…",N,N],[12,"cargo",E,"This is the actual payload",0,N],[3,"Slot",E,"Represnets the `Slot` object. Slots have their target…",N,N],[3,"Swarm",E,"Main struct that allow you to talk to the library",N,N],[4,"State",E,"States that apply to Carriers",N,N],[13,"IDLE",E,E,1,N],[13,"TARGETING",E,E,1,N],[13,"MOVING",E,E,1,N],[13,"PICKINGUP",E,E,1,N],[13,"LOOKINGFORTARGET",E,E,1,N],[13,"NOTARGET",E,E,1,N],[13,"DELIVERING",E,E,1,N],[13,"PUTTINGDOWN",E,E,1,N],[13,"_DEBUG_",E,E,1,N],[4,R[17],E,"Library supports different kind of slots",N,N],[13,"CLASSIC",E,E,2,N],[13,"PIT",E,E,2,N],[13,"SPAWNER",E,E,2,N],[11,"new",E,"Creates new Carrier at the position specified",3,[[["f64"]],[R[5]]]],[11,"get_payload",E,"Returns current payload of the carrier",3,[[["self"]],[[R[1],[R[0]]],[R[0]]]]],[11,"get_target",E,"Returns index of the slot that carriers is going to",3,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,"get_reserved_target",E,"Returns index of the slot that is reserverd as a target…",3,[[["self"]],[[R[1],[R[2]]],[R[2]]]]],[11,R[3],E,"Returns current carrier position",3,[[["self"]],[R[4]]]],[11,"get_angle",E,"Returns current carrier angle",3,[[["self"]],["f64"]]],[11,"get_state",E,"Returns current carrier state",3,[[["self"]],["state"]]],[11,"new",E,"Creates new Payload",0,[[[T]],[R[0]]]],[11,"new",E,"Creates new Slot at the position specified and with the…",4,[[[R[1],[R[0]]],[R[15]],[R[0]],["f64"]],["slot"]]],[11,R[3],E,"Returns current slot position",4,[[["self"]],[R[4]]]],[11,"get_payloads",E,"Returns current carrier payloads.",4,[[["self"]]]],[11,"set_target_payload",E,"Sets target payload",4,[[["self"],[R[1],[R[0]]],[R[0]]]]],[11,"set_payloads",E,"Sets both current and target payloads",4,[[["self"],[R[1],[R[0]]],[R[0]]]]],[11,"is_taken_care_of",E,"Returns `true` if this slot is already addressed by any of…",4,[[["self"]],["bool"]]],[11,"is_pit",E,"Returns `true` is slot is a pit",4,[[["self"]],["bool"]]],[11,"is_spawner",E,"Returns `true` is slot is a spawner",4,[[["self"]],["bool"]]],[11,"new",E,"Constructs a new `Swarm`.",5,[[],["swarm"]]],[11,"add_carrier",E,"Adds new carrier. Returns the index of the new carrier.",5,[[["self"],[R[5]]],[R[2]]]],[11,"add_slot",E,"Adds new slot. Returns the index of the new slot.",5,[[["self"],["slot"]],[R[2]]]],[11,"get_carriers",E,"Returns all carriers",5,[[["self"]],["vec"]]],[11,"set_carrier_acceleration",E,"Sets the acceleration of the specified carrier. It sets…",5,[[["self"],["f64"],[R[2]]]]],[11,"get_carrier_acceleration",E,"Returns the acceleration of the specified carrier.",5,[[["self"],[R[2]]],["f64"]]],[11,"set_carrier_max_speed",E,"Sets the maximum speed of the specified carrier.",5,[[["self"],["f64"],[R[2]]]]],[11,"get_carrier_max_speed",E,"Returns the maximum speed of the specified carrier.",5,[[["self"],[R[2]]],["f64"]]],[11,"get_slots",E,"Returns all slots",5,[[["self"]],["vec"]]],[11,"get_slots_mut",E,"Returns all slots (To be deprecated)",5,[[["self"]],["vec"]]],[11,"tick",E,"The engine must be regularly ticked by the outside world…",5,[[["self"]],["bool"]]],[11,"slot_data_changed",E,"Initiates some precalculation in order for the carriers to…",5,[[["self"]]]],[14,"make_slot_pit",E,"Helper macro for easier creation of `Pit` slots",N,N],[14,"make_slot_spawner",E,"Helper macro for easier creation of `Spawner` slots",N,N],[11,"from",E,E,3,[[[T]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[[T],["self"]]]],[11,"into",E,E,3,[[],[U]]],[11,R[9],E,E,3,[[[U]],[R[6]]]],[11,R[10],E,E,3,[[],[R[6]]]],[11,R[11],E,E,3,[[["self"]],[T]]],[11,R[13],E,E,3,[[["self"]],[T]]],[11,R[12],E,E,3,[[["self"]],[R[14]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[[T],["self"]]]],[11,"into",E,E,0,[[],[U]]],[11,R[9],E,E,0,[[[U]],[R[6]]]],[11,R[10],E,E,0,[[],[R[6]]]],[11,R[11],E,E,0,[[["self"]],[T]]],[11,R[13],E,E,0,[[["self"]],[T]]],[11,R[12],E,E,0,[[["self"]],[R[14]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[[T],["self"]]]],[11,"into",E,E,4,[[],[U]]],[11,R[9],E,E,4,[[[U]],[R[6]]]],[11,R[10],E,E,4,[[],[R[6]]]],[11,R[11],E,E,4,[[["self"]],[T]]],[11,R[13],E,E,4,[[["self"]],[T]]],[11,R[12],E,E,4,[[["self"]],[R[14]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,"into",E,E,5,[[],[U]]],[11,R[9],E,E,5,[[[U]],[R[6]]]],[11,R[10],E,E,5,[[],[R[6]]]],[11,R[11],E,E,5,[[["self"]],[T]]],[11,R[13],E,E,5,[[["self"]],[T]]],[11,R[12],E,E,5,[[["self"]],[R[14]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[[T],["self"]]]],[11,"into",E,E,1,[[],[U]]],[11,R[9],E,E,1,[[[U]],[R[6]]]],[11,R[10],E,E,1,[[],[R[6]]]],[11,R[11],E,E,1,[[["self"]],[T]]],[11,R[13],E,E,1,[[["self"]],[T]]],[11,R[12],E,E,1,[[["self"]],[R[14]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[[T],["self"]]]],[11,"into",E,E,2,[[],[U]]],[11,R[9],E,E,2,[[[U]],[R[6]]]],[11,R[10],E,E,2,[[],[R[6]]]],[11,R[11],E,E,2,[[["self"]],[T]]],[11,R[13],E,E,2,[[["self"]],[T]]],[11,R[12],E,E,2,[[["self"]],[R[14]]]],[11,"eq",E,E,1,[[["self"],["state"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["state"]],["bool"]]],[11,"eq",E,E,0,[[["self"],[R[0]]],["bool"]]],[11,"eq",E,E,2,[[["self"],[R[15]]],["bool"]]],[11,"clone",E,E,1,[[["self"]],["state"]]],[11,"clone",E,E,3,[[["self"]],[R[5]]]],[11,"clone",E,E,0,[[["self"]],[R[0]]]],[11,"clone",E,E,2,[[["self"]],[R[15]]]],[11,"clone",E,E,4,[[["self"]],["slot"]]],[11,"default",E,E,5,[[],["swarm"]]],[11,"fmt",E,E,1,[[["self"],[R[16]]],[R[6]]]],[11,"fmt",E,E,0,[[["self"],[R[16]]],[R[6]]]],[11,"fmt",E,E,2,[[["self"],[R[16]]],[R[6]]]],[11,"fmt",E,E,4,[[["self"],[R[16]]],[R[6]]]]],"p":[[3,"Payload"],[4,"State"],[4,R[17]],[3,"Carrier"],[3,"Slot"],[3,"Swarm"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);